/* Command line options for x265 */

OPT("help",            help,                            no_argument, 'h', "Show help text")
OPT("cpuid",           cpuid,                     required_argument,   0, "SIMD architecture. 2:MMX2 .. 8:AVX2 (default:0-auto)")
OPT("threads",         threadcount,               required_argument,   0, "Number of threads for thread pool (default:CPU HT core count)")
STROPT("input",        inputfn,                   required_argument,   0, "Raw YUV or Y4M input file name")
STROPT("output",       bitstreamfn,               required_argument, 'o', "Bitstream output file name")
STROPT("recon",        reconfn,                   required_argument, 'r', "Reconstructed image YUV or Y4M output file name")

OPT("InputBitDepth",   cliopt->inputBitDepth,     required_argument,   0, "Bit-depth of input file (YUV only) (default: 8)")
OPT("OutputBitDepth",  cliopt->outputBitDepth,    required_argument,   0, "Bit-depth of output file (default:InternalBitDepth)")
OPT("FrameSkip",       cliopt->frameSkip,         required_argument,   0, "Number of frames to skip at start of input YUV")
OPT("frames",          cliopt->framesToBeEncoded, required_argument, 'f', "Number of frames to be encoded (default=all)")
OPT("keyint",          param->iIntraPeriod,       required_argument, 'i', "Intra period in frames, (-1: only first frame)")

OPT("width",           param->iSourceWidth,       required_argument,   0, "Source picture width, auto-detect if Y4M")
OPT("height",          param->iSourceHeight,      required_argument,   0, "Source picture height, auto-detect if Y4M")
OPT("rate",            param->iFrameRate,         required_argument,   0, "Frame rate, auto-detect if Y4M")
OPT("depth",           param->internalBitDepth,   required_argument,   0, "Bit-depth the codec operates at. (default:InputBitDepth)")
OPT("wpp",             param->iWaveFrontSynchro,        no_argument,   0, "0:no synchro 1:synchro with TR 2:TRR etc")

OPT("ctu",             param->uiMaxCUSize,               required_argument, 's', "Maximum CU size (default: 64x64)")
OPT("pdepth",          param->uiMaxCUDepth,              required_argument, 'd', "CU partition depth (default: 4)")
OPT("TULog2MaxSize",   param->uiQuadtreeTULog2MaxSize,   required_argument, 0, "Maximum TU size in logarithm base 2")
OPT("TULog2MinSize",   param->uiQuadtreeTULog2MinSize,   required_argument, 0, "Minimum TU size in logarithm base 2")
OPT("TUMaxDepthIntra", param->uiQuadtreeTUMaxDepthIntra, required_argument, 0, "Depth of TU tree for intra CUs")
OPT("TUMaxDepthInter", param->uiQuadtreeTUMaxDepthInter, required_argument, 0, "Depth of TU tree for inter CUs")

OPT("me",              param->searchMethod,              required_argument, 0, "0:dia 1:hex 2:umh 3:star 4:hm-orig")
OPT("merange",         param->iSearchRange,              required_argument, 0, "Motion search range (default: 96)")
OPT("bpredrange",      param->bipredSearchRange,         required_argument, 0, "Motion search range for bipred refinement (default:4)")
OPT("rect",            param->enableRectInter,                 no_argument, 0, "Enable rectangular motion partitions Nx2N and 2NxN, also disables AMP")
OPT("amp",             param->enableAMP,                       no_argument, 0, "Enable asymmetric motion partitions")
OPT("tskip",           param->useTransformSkip,                no_argument, 0, "Intra transform skipping")
OPT("tskip-fast",      param->useTransformSkipFast,            no_argument, 0, "Fast intra transform skipping")
OPT("maxmerge",        param->maxNumMergeCand,           required_argument, 0, "Maximum number of merge candidates *default: 5)")
OPT("fdm",             param->useFastDecisionForMerge,         no_argument, 0, "Fast decision for Merge RD Cost")
OPT("fast-cbf",        param->bUseCbfFastMode,                 no_argument, 0, "Cbf fast mode setting")
OPT("early-skip",      param->useEarlySkipDetection,           no_argument, 0, "Early SKIP detection setting")
OPT("merge-level",     param->log2ParallelMergeLevel,    required_argument, 0, "Parallel merge estimation region")
OPT("tmvp",            param->TMVPModeId,                required_argument, 0, "TMVP mode 0: TMVP disable for all slices. 1: TMVP enable for all slices (default) 2: TMVP enable for certain slices only")

OPT("qp",              param->iQP,                       required_argument, 'q', "Base QP for CQP mode (default: 30)")
OPT("cbqpoffs",        param->cbQpOffset,                required_argument, 0, "Chroma Cb QP Offset")
OPT("crqpoffs",        param->crQpOffset,                required_argument, 0, "Chroma Cr QP Offset")
OPT("aqselect",        param->bUseAdaptQpSelect,               no_argument, 0, "Adaptive QP selection")
OPT("aq",              param->bUseAdaptiveQP,                  no_argument, 0, "QP adaptation based on a psycho-visual model")
OPT("aqrange",         param->iQPAdaptationRange,        required_argument, 0, "QP adaptation range")
OPT("MaxCuDQPDepth",   param->iMaxCuDQPDepth,            required_argument, 0, "Max depth for a minimum CU dQP")
OPT("rdoq",            param->useRDOQ,                         no_argument, 0, "Use RDO quantization")
OPT("rdoqts",          param->useRDOQTS,                       no_argument, 0, "Use RDO quantization with transform skip")
OPT("rdpenalty",       param->rdPenalty,                 required_argument, 0, "RD-penalty for 32x32 TU for intra in non-intra slices. 0:disabled  1:RD-penalty  2:maximum RD-penalty")

OPT("sao",             param->bUseSAO,                         no_argument, 0, "Enable Sample Adaptive Offset")
OPT("max-sao-offsets", param->maxNumOffsetsPerPic,       required_argument, 0, "Max number of SAO offset per picture (Default: 2048)")
OPT("SAOLcuBoundary",  param->saoLcuBoundary,                  no_argument, 0, "0: right/bottom LCU boundary areas skipped from SAO parameter estimation, 1: non-deblocked pixels are used for those areas")
OPT("sao-lcu-opt",     param->saoLcuBasedOptimization,         no_argument, 0, "0: SAO picture-based optimization, 1: SAO LCU-based optimization ")

OPT("weightp",         param->useWeightedPred,                 no_argument, 'w', "Use weighted prediction in P slices")
OPT("weightbp",        param->useWeightedBiPred,               no_argument, 0, "Use weighted (bidirectional) prediction in B slices")
OPT("signhide",        param->signHideFlag,                    no_argument, 0, "Hide sign bit of one coeff per TU (rdo)")

OPT("strong-intra-smoothing", param->useStrongIntraSmoothing,  no_argument, 0, "Enable strong intra smoothing for 32x32 blocks")
OPT("constrained-intra", param->bUseConstrainedIntraPred,      no_argument, 0, "Constrained intra prediction (use only intra coded reference pixels)")
